{"version":3,"file":"static/js/454.d2336501.chunk.js","mappings":"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","sources":["webpack://gp-project/./src/components/Content/Dialogs/Dialogs.module.css?5cdb","components/common/Date/formatDate.tsx","components/Content/Dialogs/DialogItems/DialogItems.tsx","components/common/Forms/AddMessageForm.tsx","redux/dialogApi-selectors.ts","../node_modules/@ant-design/icons-svg/es/asn/ReloadOutlined.js","../node_modules/@ant-design/icons/es/icons/ReloadOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/CloseCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/CloseCircleOutlined.js","components/Content/Dialogs/MessageSearchForm.tsx","../node_modules/@ant-design/icons-svg/es/asn/CheckCircleTwoTone.js","../node_modules/@ant-design/icons/es/icons/CheckCircleTwoTone.js","../node_modules/@ant-design/icons-svg/es/asn/DeleteTwoTone.js","../node_modules/@ant-design/icons/es/icons/DeleteTwoTone.js","../node_modules/@ant-design/icons-svg/es/asn/DislikeTwoTone.js","../node_modules/@ant-design/icons/es/icons/DislikeTwoTone.js","../node_modules/@ant-design/icons-svg/es/asn/InteractionTwoTone.js","../node_modules/@ant-design/icons/es/icons/InteractionTwoTone.js","components/Content/Dialogs/MessageItems/MessageItems.tsx","components/Content/Dialogs/MessagesElement.tsx","components/Content/Dialogs/Dialogs.tsx","components/Content/Dialogs/DialogsContainer.tsx","components/common/FormsControls/FormsControls.tsx","../node_modules/@ant-design/icons-svg/es/asn/SyncOutlined.js","../node_modules/@ant-design/icons/es/icons/SyncOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/ExclamationCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/ExclamationCircleOutlined.js","components/common/Paginator/PageNumberSettings.tsx","components/common/Paginator/Paginator.tsx","hoc/withAuthRedirect.tsx","utils/validators.ts","webpack://gp-project/./src/components/common/Paginator/Paginator.module.css?6caa"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Dialogs_wrapper__lNqMQ\",\"dialogWindow\":\"Dialogs_dialogWindow__LfISh\",\"dialogs\":\"Dialogs_dialogs__oNpB5\",\"dialog\":\"Dialogs_dialog__xIZEw\",\"user\":\"Dialogs_user__+uOXe\",\"active\":\"Dialogs_active__LeI7K\",\"additionalDialogInfo\":\"Dialogs_additionalDialogInfo__6lxg1\",\"dialogHasMessages\":\"Dialogs_dialogHasMessages__Ms+5y\",\"dialogNoMessages\":\"Dialogs_dialogNoMessages__bU-pk\",\"activeM\":\"Dialogs_activeM__PpeCe\",\"messages\":\"Dialogs_messages__Wjh8c\",\"preloader\":\"Dialogs_preloader__xwWbp\",\"formik\":\"Dialogs_formik__HtNB1\",\"messagesBox\":\"Dialogs_messagesBox__5Apsn\",\"closeWindow\":\"Dialogs_closeWindow__WF0eA\",\"deletedMessagesBox\":\"Dialogs_deletedMessagesBox__e6ng7\",\"messagePhoto\":\"Dialogs_messagePhoto__i546r\",\"message\":\"Dialogs_message__diHvN\",\"greyPhoto\":\"Dialogs_greyPhoto__Q058N\",\"greenPhoto\":\"Dialogs_greenPhoto__YIYfZ\",\"grey\":\"Dialogs_grey__LGeMF\",\"green\":\"Dialogs_green__-ntb-\",\"messageStatus\":\"Dialogs_messageStatus__EiRKg\",\"userNameAtMessage\":\"Dialogs_userNameAtMessage__REd6l\",\"messageDate\":\"Dialogs_messageDate__N8Tc4\",\"viewedMessage\":\"Dialogs_viewedMessage__4ba7l\",\"deletedMessage\":\"Dialogs_deletedMessage__jEgXJ\",\"addMessage\":\"Dialogs_addMessage__rAo4L\",\"onSendMessageClick\":\"Dialogs_onSendMessageClick__KOwgs\",\"newMessageButton\":\"Dialogs_newMessageButton__5FxYG\",\"updateButton\":\"Dialogs_updateButton__WMLTd\",\"restoreButton\":\"Dialogs_restoreButton__Sh7Yb\",\"NewMessagetTextarea\":\"Dialogs_NewMessagetTextarea__J1IZ0\"};","import React from \"react\";\r\n\r\nconst padTo2Digits = (num:number) => {\r\n    return num.toString().padStart(2, '0');\r\n}\r\n\r\nfunction getMonthName(monthNumber:number) {\r\n    const date = new Date();\r\n    date.setMonth(monthNumber - 1);\r\n\r\n    return date.toLocaleString('en-US', { month: 'short' });\r\n}\r\n\r\nexport const formatDate = (date: Date) => (\r\n    [\r\n        padTo2Digits(date.getDate()),\r\n        getMonthName(date.getMonth() + 1),\r\n        date.getFullYear(),\r\n\r\n    ].join(' ') +\r\n    ', ' +\r\n    [\r\n        padTo2Digits(date.getHours()),\r\n        padTo2Digits(date.getMinutes()),\r\n        padTo2Digits(date.getSeconds()),\r\n    ].join(':')\r\n)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport noPhoto from '../../../../assets/images/noPic.jpg'\r\nimport css from './../Dialogs.module.css';\r\nimport { DialogsResponseType } from '../../../../types/types';\r\nimport { SelectedUserType } from '../Dialogs';\r\nimport { formatDate } from '../../../common/Date/formatDate';\r\n\r\n\r\ntype PropsType = {\r\n    selectedUser: SelectedUserType | null\r\n    onUserSelected: (user: SelectedUserType) => void\r\n}\r\n\r\nconst DialogItem: React.FC<PropsType & DialogsResponseType> = (props) => {\r\n    let avatarPhoto: string = noPhoto\r\n    if (props.photos.small) { avatarPhoto = props.photos.small }\r\n\r\n    // let actitvityDate = props.lastUserActivityDate.split('T')[0]\r\n    // let actitvityTime = props.lastUserActivityDate.split('T')[1].slice(0, 5)\r\n  \r\n    let formatedDate = formatDate(new Date(props.lastUserActivityDate + 'Z'))\r\n\r\n    return (\r\n        <div>\r\n\r\n            <NavLink onClick={()=>{\r\n                props.onUserSelected({userId: props.id, name:props.userName, photo: props.photos})\r\n            }\r\n            } className={({ isActive }) => (isActive ? (css.dialog + \" \" + css.active) : css.dialog)} to={'/dialogs/' + props.id}>\r\n                <div className={css.user}>\r\n                    <img src={avatarPhoto} alt=\"\" />\r\n                    <span>{props.userName}</span>\r\n                </div>\r\n            </NavLink>\r\n            <div className={css.additionalDialogInfo}>\r\n                <p>online: {formatedDate}</p>\r\n                {props.hasNewMessages\r\n                    ? <>\r\n\r\n                        <div data-userMessagesNumber>{props.newMessagesCount}</div>\r\n                    <p className={css.dialogHasMessages}>new messages </p>\r\n                    </>\r\n\r\n                    : <p className={css.dialogHasMessages + ' ' + css.dialogNoMessages}>no new messages</p>}\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport { InjectedFormProps, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator, minLengthCreator } from '../../../utils/validators';\r\nimport { NewMessageFormType as NewMessageFormValuesType} from '../../Content/Dialogs/Dialogs';\r\nimport { createField, Textarea } from '../FormsControls/FormsControls';\r\nimport css from './../../Content/Dialogs/Dialogs.module.css'\r\n\r\n\r\n\r\nconst maxLength300 = maxLengthCreator(300)\r\nconst minLength2 = minLengthCreator(2)\r\n\r\ntype OwnPropsType = {}\r\n\r\ntype NewMessageFormValueKeysType = Extract<keyof NewMessageFormValuesType, string>\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormValuesType, OwnPropsType> & OwnPropsType>\r\n= ({ handleSubmit, error }) => {\r\n    return (\r\n        <form className={css.onSendMessageClick} onSubmit={handleSubmit} >\r\n            {createField<NewMessageFormValueKeysType>(error, 'newMessageText', 'Add your message', Textarea, 'text', 'Enter your message', '', [required, maxLength300, minLength2], '', 4)}\r\n            \r\n            <button className={css.newMessageButton} >Send message</button>\r\n\r\n        </form >\r\n    )\r\n}\r\n\r\nexport default reduxForm<NewMessageFormValuesType, OwnPropsType>({ form: 'dialogAddMessageForm' })(AddMessageForm)","/* Selectors */\r\nimport { AppStateType } from \"./redux-store\"\r\n\r\nexport const getDialogs = (state:AppStateType) => {\r\n    return state.dialogsApiPage.dialogData\r\n}\r\n\r\nexport const getMessages = (state:AppStateType) => {\r\n    return state.dialogsApiPage.messageData\r\n}\r\n\r\nexport const getDeletedMessages = (state:AppStateType) => {\r\n    return state.dialogsApiPage.deletedMessageData\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.dialogsApiPage.isFetching\r\n}\r\n\r\n","// This icon file is generated automatically.\nvar ReloadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M909.1 209.3l-56.4 44.1C775.8 155.1 656.2 92 521.9 92 290 92 102.3 279.5 102 511.5 101.7 743.7 289.8 932 521.9 932c181.3 0 335.8-115 394.6-276.1 1.5-4.2-.7-8.9-4.9-10.3l-56.7-19.5a8 8 0 00-10.1 4.8c-1.8 5-3.8 10-5.9 14.9-17.3 41-42.1 77.8-73.7 109.4A344.77 344.77 0 01655.9 829c-42.3 17.9-87.4 27-133.8 27-46.5 0-91.5-9.1-133.8-27A341.5 341.5 0 01279 755.2a342.16 342.16 0 01-73.7-109.4c-17.9-42.4-27-87.4-27-133.9s9.1-91.5 27-133.9c17.3-41 42.1-77.8 73.7-109.4 31.6-31.6 68.4-56.4 109.3-73.8 42.3-17.9 87.4-27 133.8-27 46.5 0 91.5 9.1 133.8 27a341.5 341.5 0 01109.3 73.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.6 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c-.1-6.6-7.8-10.3-13-6.2z\" } }] }, \"name\": \"reload\", \"theme\": \"outlined\" };\nexport default ReloadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ReloadOutlinedSvg from \"@ant-design/icons-svg/es/asn/ReloadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar ReloadOutlined = function ReloadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ReloadOutlinedSvg\n  }));\n};\nReloadOutlined.displayName = 'ReloadOutlined';\nexport default /*#__PURE__*/React.forwardRef(ReloadOutlined);","// This icon file is generated automatically.\nvar CloseCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M685.4 354.8c0-4.4-3.6-8-8-8l-66 .3L512 465.6l-99.3-118.4-66.1-.3c-4.4 0-8 3.5-8 8 0 1.9.7 3.7 1.9 5.2l130.1 155L340.5 670a8.32 8.32 0 00-1.9 5.2c0 4.4 3.6 8 8 8l66.1-.3L512 564.4l99.3 118.4 66 .3c4.4 0 8-3.5 8-8 0-1.9-.7-3.7-1.9-5.2L553.5 515l130.1-155c1.2-1.4 1.8-3.3 1.8-5.2z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 65C264.6 65 64 265.6 64 513s200.6 448 448 448 448-200.6 448-448S759.4 65 512 65zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"close-circle\", \"theme\": \"outlined\" };\nexport default CloseCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CloseCircleOutlined = function CloseCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseCircleOutlinedSvg\n  }));\n};\nCloseCircleOutlined.displayName = 'CloseCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseCircleOutlined);","import { Formik, Form, Field, /* ErrorMessage */ } from 'formik';\r\nimport { FormikHelpers } from 'formik/dist/types';\r\nimport React from 'react';\r\nimport css from './Dialogs.module.css'\r\n\r\n\r\nconst messageSearchFormValidate = (values: any) => {\r\n    const errors = {};\r\n    return errors;\r\n}\r\n\r\ntype PropsType = {\r\n    onDateChanged: (date: string) => void\r\n}\r\n\r\ntype FormType = {\r\n    date: string\r\n}\r\n\r\nexport const MessageSearchForm: React.FC<PropsType> = React.memo(({ onDateChanged }) => {\r\n    const submit = (values: FormType, { setSubmitting }: FormikHelpers<FormType>) => {\r\n        onDateChanged(String(values.date))\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return <div >\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{ date: '' }}\r\n            validate={messageSearchFormValidate}\r\n            onSubmit={submit}\r\n        >\r\n            {({ isSubmitting }) => (\r\n                <Form className={css.formik}>\r\n                    <label > from the date</label>\r\n                    <Field type=\"date\"  name=\"date\"/>\r\n\r\n                    <button type=\"submit\" disabled={isSubmitting}>Show</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n\r\n    </div>\r\n})","// This icon file is generated automatically.\nvar CheckCircleTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\", \"fill\": primaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm193.4 225.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.3 0 19.9 5 25.9 13.3l71.2 98.8 157.2-218c6-8.4 15.7-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.4 12.7z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0051.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z\", \"fill\": primaryColor } }] }; }, \"name\": \"check-circle\", \"theme\": \"twotone\" };\nexport default CheckCircleTwoTone;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckCircleTwoToneSvg from \"@ant-design/icons-svg/es/asn/CheckCircleTwoTone\";\nimport AntdIcon from '../components/AntdIcon';\nvar CheckCircleTwoTone = function CheckCircleTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckCircleTwoToneSvg\n  }));\n};\nCheckCircleTwoTone.displayName = 'CheckCircleTwoTone';\nexport default /*#__PURE__*/React.forwardRef(CheckCircleTwoTone);","// This icon file is generated automatically.\nvar DeleteTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M292.7 840h438.6l24.2-512h-487z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M864 256H736v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zm-504-72h304v72H360v-72zm371.3 656H292.7l-24.2-512h487l-24.2 512z\", \"fill\": primaryColor } }] }; }, \"name\": \"delete\", \"theme\": \"twotone\" };\nexport default DeleteTwoTone;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteTwoToneSvg from \"@ant-design/icons-svg/es/asn/DeleteTwoTone\";\nimport AntdIcon from '../components/AntdIcon';\nvar DeleteTwoTone = function DeleteTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DeleteTwoToneSvg\n  }));\n};\nDeleteTwoTone.displayName = 'DeleteTwoTone';\nexport default /*#__PURE__*/React.forwardRef(DeleteTwoTone);","// This icon file is generated automatically.\nvar DislikeTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M273 100.1v428h.3l-.3-428zM820.4 525l-21.9-19 14-25.5a56.2 56.2 0 006.9-27.3c0-16.5-7.1-32.2-19.6-43l-21.9-19 13.9-25.4a56.2 56.2 0 006.9-27.3c0-16.5-7.1-32.2-19.6-43l-21.9-19 13.9-25.4a56.2 56.2 0 006.9-27.3c0-22.4-13.2-42.6-33.6-51.8H345v345.2c18.6 67.2 46.4 168 83.5 302.5a44.28 44.28 0 0042.2 32.3c7.5.1 15-2.2 21.1-6.7 9.9-7.4 15.2-18.6 14.6-30.5l-9.6-198.4h314.4C829 605.5 840 587.1 840 568c0-16.5-7.1-32.2-19.6-43z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M112 132v364c0 17.7 14.3 32 32 32h65V100h-65c-17.7 0-32 14.3-32 32zm773.9 358.3c3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-51.6-30.7-98.1-78.3-118.4a66.1 66.1 0 00-26.5-5.4H273l.3 428 85.8 310.8C372.9 889 418.9 924 470.9 924c29.7 0 57.4-11.8 77.9-33.4 20.5-21.5 31-49.7 29.5-79.4l-6-122.9h239.9c12.1 0 23.9-3.2 34.3-9.3 40.4-23.5 65.5-66.1 65.5-111 0-28.3-9.3-55.5-26.1-77.7zm-74.7 126.1H496.8l9.6 198.4c.6 11.9-4.7 23.1-14.6 30.5-6.1 4.5-13.6 6.8-21.1 6.7a44.28 44.28 0 01-42.2-32.3c-37.1-134.4-64.9-235.2-83.5-302.5V172h399.4a56.85 56.85 0 0133.6 51.8c0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19a56.76 56.76 0 0119.6 43c0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19a56.76 56.76 0 0119.6 43c0 9.7-2.3 18.9-6.9 27.3l-14 25.5 21.9 19a56.76 56.76 0 0119.6 43c0 19.1-11 37.5-28.8 48.4z\", \"fill\": primaryColor } }] }; }, \"name\": \"dislike\", \"theme\": \"twotone\" };\nexport default DislikeTwoTone;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DislikeTwoToneSvg from \"@ant-design/icons-svg/es/asn/DislikeTwoTone\";\nimport AntdIcon from '../components/AntdIcon';\nvar DislikeTwoTone = function DislikeTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DislikeTwoToneSvg\n  }));\n};\nDislikeTwoTone.displayName = 'DislikeTwoTone';\nexport default /*#__PURE__*/React.forwardRef(DislikeTwoTone);","// This icon file is generated automatically.\nvar InteractionTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z\", \"fill\": primaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M184 840h656V184H184v656zm114-401.9c0-55.3 44.6-100.1 99.7-100.1h205.8v-53.4c0-5.6 6.5-8.8 10.9-5.3L723.5 365c3.5 2.7 3.5 8 0 10.7l-109.1 85.7c-4.4 3.5-10.9.4-10.9-5.3v-53.4H397.8c-19.6 0-35.5 15.9-35.5 35.6v78.9c0 3.8-3.1 6.8-6.8 6.8h-50.7c-3.8 0-6.8-3-6.8-7v-78.9zm2.6 210.3l109.1-85.7c4.4-3.5 10.9-.4 10.9 5.3v53.4h205.6c19.6 0 35.5-15.9 35.5-35.6v-78.9c0-3.8 3.1-6.8 6.8-6.8h50.7c3.8 0 6.8 3.1 6.8 6.8v78.9c0 55.3-44.6 100.1-99.7 100.1H420.6v53.4c0 5.6-6.5 8.8-10.9 5.3l-109.1-85.7c-3.5-2.7-3.5-8 0-10.5z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M304.8 524h50.7c3.7 0 6.8-3 6.8-6.8v-78.9c0-19.7 15.9-35.6 35.5-35.6h205.7v53.4c0 5.7 6.5 8.8 10.9 5.3l109.1-85.7c3.5-2.7 3.5-8 0-10.7l-109.1-85.7c-4.4-3.5-10.9-.3-10.9 5.3V338H397.7c-55.1 0-99.7 44.8-99.7 100.1V517c0 4 3 7 6.8 7zm-4.2 134.9l109.1 85.7c4.4 3.5 10.9.3 10.9-5.3v-53.4h205.7c55.1 0 99.7-44.8 99.7-100.1v-78.9c0-3.7-3-6.8-6.8-6.8h-50.7c-3.7 0-6.8 3-6.8 6.8v78.9c0 19.7-15.9 35.6-35.5 35.6H420.6V568c0-5.7-6.5-8.8-10.9-5.3l-109.1 85.7c-3.5 2.5-3.5 7.8 0 10.5z\", \"fill\": primaryColor } }] }; }, \"name\": \"interaction\", \"theme\": \"twotone\" };\nexport default InteractionTwoTone;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport InteractionTwoToneSvg from \"@ant-design/icons-svg/es/asn/InteractionTwoTone\";\nimport AntdIcon from '../components/AntdIcon';\nvar InteractionTwoTone = function InteractionTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: InteractionTwoToneSvg\n  }));\n};\nInteractionTwoTone.displayName = 'InteractionTwoTone';\nexport default /*#__PURE__*/React.forwardRef(InteractionTwoTone);","import React from 'react';\r\nimport css from './../Dialogs.module.css';\r\nimport { MessageItemsType, PhotosType } from '../../../../types/types';\r\nimport { AppDispatchType, AppStateType } from '../../../../redux/redux-store';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport noPhoto from '../../../../assets/images/noPic.jpg'\r\nimport { formatDate } from '../../../common/Date/formatDate'\r\nimport { CheckCircleTwoTone, DeleteTwoTone, DislikeTwoTone, InteractionTwoTone } from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype PropsType = {\r\n    contactPhoto: PhotosType | undefined\r\n    deleteMessage: (messageId: string, delSpamMessage: MessageItemsType) => void\r\n    spamMessage: (messageId: string, delSpamMessage: MessageItemsType) => void\r\n    restoreMessages: (messageId: string) => void\r\n    requestMessages: () => void\r\n    componentType: string\r\n}\r\n\r\nconst MessageItem: React.FC<PropsType & MessageItemsType> = React.memo(({ contactPhoto, deleteMessage, spamMessage,\r\n    restoreMessages, requestMessages, componentType, ...message }) => {\r\n\r\n    const myId = useSelector((state: AppStateType) => state.auth.userId)\r\n    const myPhoto = useSelector((state: AppStateType) => state.auth.userPhoto)\r\n\r\n    const dispatch: AppDispatchType = useDispatch()\r\n\r\n\r\n    // let addedAtDate = message.addedAt.split('T')[0]\r\n    // let addedAtTime = message.addedAt.split('T')[1].slice(0, 5)\r\n    let formatedDate = formatDate(new Date(message.addedAt + 'Z'))\r\n\r\n\r\n\r\n    let userPhoto: string = noPhoto\r\n    if (contactPhoto) {\r\n        if (contactPhoto.small !== null) userPhoto = contactPhoto.small\r\n    }\r\n    let ownerPhoto: string = noPhoto\r\n    if (myPhoto) { ownerPhoto = myPhoto }\r\n\r\n\r\n    const onDeleteClicked = () => {\r\n        message.status = 'deleted'\r\n        deleteMessage(message.id, message)\r\n        requestMessages()\r\n        console.log('message deleting', message.id, 'status:', message.status)\r\n    }\r\n    const onSpamClicked = () => {\r\n        message.status = 'spam'\r\n        spamMessage(message.id, message)\r\n        requestMessages()\r\n        console.log('message spamming', message.id)\r\n    }\r\n\r\n    const onRestoreClicked = () => {\r\n        message.status = ''\r\n        restoreMessages(message.id)\r\n        requestMessages()\r\n        console.log('message restoring', message.id)\r\n    }\r\n\r\n\r\n    return (\r\n        <div >\r\n            <div className={css.message + ' ' + ((myId === message.senderId) ? css.green : css.grey)}>\r\n\r\n                <div className={css.messagePhoto + ' ' + ((myId === message.senderId) ? css.greenPhoto : css.greyPhoto)}>\r\n                    <img src={myId === message.senderId\r\n                        ? ownerPhoto\r\n                        : userPhoto\r\n                    } alt='avatar' />\r\n                </div>\r\n                <div className={css.messageStatus + ' ' + ((myId === message.senderId) ? css.green : css.grey)}>\r\n                    <p>{message.status}</p>\r\n                </div>\r\n\r\n                <div className={css.userNameAtMessage}> {message.senderName}</div>\r\n                <p>{message.id}</p>\r\n                {message.body}\r\n                {/* <div className={css.messageDate}> {addedAtDate} @  {addedAtTime}</div> */}\r\n                <div className={css.messageDate}>\r\n                    {formatedDate}\r\n                </div>\r\n\r\n                {myId === message.senderId &&\r\n                    <div className={css.viewedMessage}>{message.viewed\r\n                        ? <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\r\n                        : <CheckCircleTwoTone twoToneColor=\"grey\" />\r\n                    }\r\n                    </div>\r\n                }\r\n\r\n                <div className={css.deletedMessage + ' ' + ((myId === message.senderId) ? css.green : css.grey)}>\r\n                    {componentType === 'messages'\r\n                        ? <div>\r\n                            <button onClick={onDeleteClicked} data-hint=\"Delete message\">\r\n                                <DeleteTwoTone style={{ fontSize: '20px' }} />\r\n                            </button>\r\n                            <button onClick={onSpamClicked} data-hint=\"Spam message\">\r\n                                <DislikeTwoTone twoToneColor=\"#eb2f96\" style={{ fontSize: '20px' }} />\r\n                            </button>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <button onClick={onRestoreClicked} data-hint=\"Restore message\">\r\n                                <InteractionTwoTone style={{ fontSize: '20px' }} />\r\n                            </button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport MessageItem from './MessageItems/MessageItems';\r\nimport { MessageItemsType } from '../../../types/types';\r\nimport { PhotosType } from '../../../types/types';\r\n\r\n\r\nexport type MessagePropsType = {\r\n    contactPhoto: PhotosType | undefined\r\n    deleteMessage: (messageId: string, delMessage: MessageItemsType) => void\r\n    spamMessage: (messageId: string) => void\r\n    requestMessages: () => void\r\n    restoreMessages: (messageId: string) => void\r\n}\r\n\r\ntype PropsType = {\r\n    messages: MessageItemsType[]\r\n    componentType: string\r\n    messageProps: MessagePropsType\r\n}\r\n\r\n\r\nexport const MessagesElement: React.FC<PropsType> = ({ messages, componentType, messageProps }) => {\r\n\r\n\r\n    let elements = messages.map(m => (\r\n        <MessageItem\r\n            key={m.id}\r\n            id={m.id}\r\n            body={m.body}\r\n            translatedBody={m.translatedBody}\r\n            addedAt={m.addedAt}\r\n            senderId={m.senderId}\r\n            senderName={m.senderName}\r\n            recipientId={m.recipientId}\r\n            viewed={m.viewed}\r\n            deletedByRecipient={m.deletedByRecipient}\r\n            deletedBySender={m.deletedByRecipient}\r\n            isSpam={m.isSpam}\r\n            recipientName={m.recipientName}\r\n            status={m.status}\r\n            componentType={componentType}\r\n            contactPhoto={messageProps.contactPhoto}\r\n            deleteMessage={messageProps.deleteMessage}\r\n            spamMessage={messageProps.spamMessage}\r\n            restoreMessages={messageProps.restoreMessages}\r\n            requestMessages={messageProps.requestMessages}\r\n        />\r\n    ));\r\n\r\n    return <div>{elements} </div>\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport css from './Dialogs.module.css';\r\nimport DialogItem from './DialogItems/DialogItems';\r\nimport AddMessageForm from '../../common/Forms/AddMessageForm';\r\nimport { InitialStateType } from '../../../redux/dialogs-reducer';\r\nimport { MessageItemsType } from '../../../types/types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getDeletedMessages, getDialogs, getIsFetching, getMessages } from '../../../redux/dialogApi-selectors';\r\nimport { AppDispatchType } from '../../../redux/redux-store';\r\nimport { requestDialogs, showMessages, requestMessagesAfterDate, startChatting } from '../../../redux/dialogsApi-reducer';\r\nimport Paginator from '../../common/Paginator/Paginator';\r\nimport { CloseCircleOutlined, ReloadOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport { PageNumberSetting } from '../../common/Paginator/PageNumberSettings';\r\nimport { PhotosType } from '../../../types/types';\r\nimport { MessageSearchForm } from './MessageSearchForm';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport { MessagePropsType, MessagesElement } from './MessagesElement';\r\n\r\n\r\n\r\ntype PropsType = {\r\n    dialogsPage: InitialStateType\r\n    requestDialogs: () => void\r\n    // requestMessages: (userId: number, currentPage: number, pageSize: number, setTotalUsersCount: any) => void\r\n    addMessage: (userId: number, newMessageText: string) => void\r\n    deleteMessage: (messageId: string, delMessage: MessageItemsType) => void\r\n    spamMessage: (messageId: string) => void\r\n    restoreMessages: (messageId: string) => void\r\n\r\n}\r\n\r\nexport type NewMessageFormType = {\r\n    newMessageText: string\r\n\r\n}\r\n\r\nexport type SelectedUserType = {\r\n    name: string\r\n    userId: number\r\n    photo: PhotosType\r\n}\r\n\r\n\r\n\r\nconst Dialogs: React.FC<PropsType> = ({ addMessage, deleteMessage, spamMessage, restoreMessages }) => {\r\n\r\n    const dialogs = useSelector(getDialogs)\r\n    const messages = useSelector(getMessages)\r\n    const deletedMessages = useSelector(getDeletedMessages)\r\n    const [selectedUser, setSelectedUser] = useState<SelectedUserType | null>(null)\r\n    const [isRestoredMessage, setIsRestoredMessage] = useState(false)\r\n    const isFetching = useSelector(getIsFetching)\r\n\r\n    const dispatch: AppDispatchType = useDispatch()\r\n\r\n\r\n    /* Page Settings */\r\n    const [totalCount, setTotalCount] = useState(1)\r\n    const [pageSize, setPageSize] = useState(5)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [pagesInput, setPageInput] = useState(false)\r\n\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    const requestMessages = () => {\r\n\r\n        if (!!selectedUser) {\r\n            // showMessages(selectedUser.userId, currentPage, pageSize, setTotalCount)\r\n            dispatch(showMessages(selectedUser.userId, currentPage, pageSize, setTotalCount))\r\n            dispatch(requestDialogs())\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(requestDialogs())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        requestMessages()\r\n    }, [selectedUser, totalCount, currentPage, pageSize])\r\n\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(1)\r\n    }, [pageSize, selectedUser, totalCount])\r\n\r\n    const messageProps: MessagePropsType = {\r\n        contactPhoto: selectedUser?.photo,\r\n        deleteMessage,\r\n        spamMessage,\r\n        requestMessages,\r\n        restoreMessages,\r\n    }\r\n\r\n\r\n\r\n    let dialogElements = dialogs.map(d => (\r\n        <DialogItem\r\n            key={d.id}\r\n            id={d.id}\r\n            userName={d.userName}\r\n            hasNewMessages={d.hasNewMessages}\r\n            lastDialogActivityDate={d.lastDialogActivityDate}\r\n            lastUserActivityDate={d.lastUserActivityDate}\r\n            newMessagesCount={d.newMessagesCount}\r\n            photos={d.photos}\r\n            onUserSelected={setSelectedUser}\r\n            selectedUser={selectedUser}\r\n        />\r\n    ))\r\n\r\n\r\n\r\n    const addNewMessage = (values: NewMessageFormType) => {\r\n        if (!!selectedUser) {\r\n            addMessage(selectedUser.userId, values.newMessageText);\r\n        }\r\n        requestMessages()\r\n    }\r\n\r\n    const onPageSizeHandling = () => {\r\n        setPageInput(true)\r\n    }\r\n\r\n    const onDateChanged = (date: string) => {\r\n        console.log('messages from', date)\r\n\r\n        if (!!selectedUser) {\r\n            dispatch(requestMessagesAfterDate(selectedUser.userId, date))\r\n        }\r\n    }\r\n\r\n    const onStartChatting = () => {\r\n        if (!!selectedUser) {\r\n            dispatch(startChatting(selectedUser.userId))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={css.wrapper} >\r\n            <h1> Dialog page</h1>\r\n\r\n            <div className={css.dialogWindow}>\r\n                <div className={css.dialogs}>\r\n                    <h4>Dialogs</h4>\r\n                    {selectedUser &&\r\n                        <div style={{ marginTop: '-40px', marginLeft: \"135px\", }}>\r\n                            <button onClick={onStartChatting} style={{ fontWeight: 'bold', height: '20px' }}>\r\n                                <ReloadOutlined style={{ margin: '-7px' }} />\r\n                            </button>\r\n                        </div>\r\n\r\n                    }\r\n\r\n\r\n                    <div>                        {/* ____Dialog Box____ */}\r\n                        {dialogElements}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className={css.messages}>\r\n                    <h4>{'Messages with '}\r\n                        {selectedUser\r\n                            ? (selectedUser.name)\r\n                            : ' ...'}\r\n                    </h4>\r\n\r\n                    {\r\n                        isRestoredMessage\r\n                            ? <div >\r\n                                <h5 style={{ marginBottom: '-15px' }}>Restoring messages</h5>\r\n                                <div className={css.closeWindow}>\r\n                                    <button onClick={() => setIsRestoredMessage(false)} data-hint=\"Close restoring\"><CloseCircleOutlined /></button>\r\n                                </div>\r\n                                <div className={css.deletedMessagesBox}>\r\n                                    {<MessagesElement messages={deletedMessages} componentType={'deletedMessages'} messageProps={messageProps} />}\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            : <div>\r\n\r\n                                <MessageSearchForm onDateChanged={onDateChanged} />\r\n\r\n                                <button className={css.settingButton} onClick={onPageSizeHandling} style={{ fontWeight: 'bold', marginTop: '-60px', marginLeft: \"92%\" }}><SettingOutlined style={{ margin: '-7px' }} /></button>\r\n                                <div style={{ display: 'flex', justifyContent: 'right', marginTop: '-10px' }}>\r\n                                    <PageNumberSetting value={pageSize}\r\n                                        pagesInput={pagesInput}\r\n                                        settings={setPageInput}\r\n                                        onSubmit={(value) => { setPageSize(value) }}\r\n                                        maxNumber={20}\r\n                                    />\r\n                                </div>\r\n\r\n                                {/* _____Message Box____  */}\r\n                                < div className={css.messagesBox}>\r\n                                    {selectedUser\r\n                                        ? <div >\r\n                                            <div className={css.preloader}> {isFetching ? <Preloader /> : null}</div>\r\n                                            {<MessagesElement messages={messages} componentType={'messages'} messageProps={messageProps} />}\r\n\r\n                                        </div>\r\n\r\n                                        : ''}\r\n                                </div>\r\n                                {/* __________________________________ */}\r\n\r\n                                <Paginator totalItemsCount={totalCount} pageSize={pageSize} currentPage={currentPage} onPageChanged={onPageChanged} />\r\n                                <span>  messages per page: {pageSize}</span>\r\n\r\n                                <AddMessageForm onSubmit={addNewMessage} />\r\n                                <div className={css.updateButton}> <button onClick={() => requestMessages()} data-hint=\"Update messages\">Update</button></div>\r\n                                <div className={css.restoreButton} > <button onClick={() => setIsRestoredMessage(true)} data-hint=\"Restore deleted messages\">Restore</button></div>\r\n\r\n                            </div>\r\n\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { AppStateType } from '../../../redux/redux-store';\r\nimport { requestDialogs, addMessage, deleteMessage, spamMessage, restoreMessages } from './../../../redux/dialogsApi-reducer';\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n\r\n        dialogsApiPage: state.dialogsApiPage\r\n    }\r\n}\r\n\r\n\r\n/* HOC */\r\n// let AuthRedirectComponent = withAuthRedirect (Dialogs)\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        requestDialogs,\r\n        addMessage,\r\n        deleteMessage,\r\n        spamMessage,\r\n        restoreMessages,\r\n\r\n    }),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from \"react\";\r\nimport css from \"./FormsControls.module.css\";\r\nimport sign from \"../../../assets/images/sign4.jpg\"\r\nimport { Field, WrappedFieldProps } from \"redux-form\";\r\nimport { FieldValidatorType } from \"../../../utils/validators\";\r\n\r\ntype CommonFieldPropsType = {\r\n    label: string | null\r\n    children: React.ReactNode\r\n}\r\n\r\nexport type FieldType = WrappedFieldProps & CommonFieldPropsType\r\n\r\n\r\nconst FormControl: React.FC<FieldType> = ({ meta: { touched, error }, label, children }) => {\r\n    // debugger\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={hasError ? css.errorField : ''}>\r\n            <label className={css.label}>{label}</label>\r\n            <div className={(hasError ? (css.Text + ' ' + css.errorText) : css.Text)}>\r\n                {children}\r\n            </div>\r\n\r\n            {hasError &&\r\n                <div className={css.warningWrap}>\r\n                    <img className={css.errorSignPic} src={sign} alt=\"\" />\r\n                    <span className={css.errorSpan}>{error}</span>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const Textarea: React.FC<FieldType> = (props) => {\r\n    const { input, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input: React.FC<FieldType> = (props) => {\r\n\r\n    const { input, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n\r\n/* Form Patern */\r\n\r\nexport function createField<FormKeysType extends string> (error: string | null,\r\n    name: FormKeysType,\r\n    label: string | null,\r\n    component: React.FC<FieldType> | \"input\" | \"select\" | \"textarea\" | undefined,\r\n    type: string,\r\n    placeholder: string | undefined,\r\n    autocomplete: string,\r\n    validate: Array<FieldValidatorType>,\r\n    text = \"\",\r\n    rows:number|null) {\r\n        return <div>\r\n        <Field\r\n            name={name}\r\n            label={label}\r\n            component={component}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            autoComplete={autocomplete}\r\n            validate={validate}\r\n            rows={rows}\r\n        /> {text}\r\n    </div>\r\n    }\r\n\r\nexport type GetStringKeys <T> = Extract<keyof T, string>\r\n","// This icon file is generated automatically.\nvar SyncOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M168 504.2c1-43.7 10-86.1 26.9-126 17.3-41 42.1-77.7 73.7-109.4S337 212.3 378 195c42.4-17.9 87.4-27 133.9-27s91.5 9.1 133.8 27A341.5 341.5 0 01755 268.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.7 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c0-6.7-7.7-10.5-12.9-6.3l-56.4 44.1C765.8 155.1 646.2 92 511.8 92 282.7 92 96.3 275.6 92 503.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8zm756 7.8h-60c-4.4 0-7.9 3.5-8 7.8-1 43.7-10 86.1-26.9 126-17.3 41-42.1 77.8-73.7 109.4A342.45 342.45 0 01512.1 856a342.24 342.24 0 01-243.2-100.8c-9.9-9.9-19.2-20.4-27.8-31.4l60.2-47a8 8 0 00-3-14.1l-175.7-43c-5-1.2-9.9 2.6-9.9 7.7l-.7 181c0 6.7 7.7 10.5 12.9 6.3l56.4-44.1C258.2 868.9 377.8 932 512.2 932c229.2 0 415.5-183.7 419.8-411.8a8 8 0 00-8-8.2z\" } }] }, \"name\": \"sync\", \"theme\": \"outlined\" };\nexport default SyncOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SyncOutlinedSvg from \"@ant-design/icons-svg/es/asn/SyncOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar SyncOutlined = function SyncOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SyncOutlinedSvg\n  }));\n};\nSyncOutlined.displayName = 'SyncOutlined';\nexport default /*#__PURE__*/React.forwardRef(SyncOutlined);","// This icon file is generated automatically.\nvar ExclamationCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M464 688a48 48 0 1096 0 48 48 0 10-96 0zm24-112h48c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8z\" } }] }, \"name\": \"exclamation-circle\", \"theme\": \"outlined\" };\nexport default ExclamationCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ExclamationCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/ExclamationCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar ExclamationCircleOutlined = function ExclamationCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ExclamationCircleOutlinedSvg\n  }));\n};\nExclamationCircleOutlined.displayName = 'ExclamationCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(ExclamationCircleOutlined);","import { useEffect, useState } from \"react\"\r\nimport css from './Paginator.module.css'\r\nimport { ExclamationCircleOutlined, SyncOutlined } from \"@ant-design/icons\"\r\n\r\ntype PageNumberSettingsPropsType = {\r\n    pagesInput: boolean\r\n    value: number\r\n    onSubmit: (fixedValue: number) => void\r\n    settings: (isVisible: boolean) => void\r\n    maxNumber: number\r\n}\r\n\r\nexport const PageNumberSetting = (props: PageNumberSettingsPropsType) => {\r\n    const [tepmNumber, setTempNumber] = useState<number>(5)\r\n    useEffect(() => {\r\n        setTempNumber(props.value)\r\n    }, [props.value])\r\n\r\n    return (\r\n        <div >\r\n            {props.pagesInput &&\r\n                <div className={css.settingPageSize}>\r\n                    <span> Enter number of items per page </span>\r\n                    <input placeholder='list count'\r\n                        type={'number'}\r\n                        value={tepmNumber}\r\n                        onChange={(e) => { setTempNumber(+e.currentTarget.value) }}\r\n                    />\r\n\r\n                    <button onClick={() => {\r\n                        if (tepmNumber !== null) {\r\n                            props.onSubmit(tepmNumber)\r\n                        }\r\n                        props.settings(false)\r\n                    }} disabled={tepmNumber > props.maxNumber} style={{height:'10px'}}>\r\n                        \r\n                        {tepmNumber > props.maxNumber ? <SyncOutlined spin style={{ fontWeight: 'bold', marginTop: '-60px' }} /> : 'Apply'}\r\n                        \r\n                    </button>\r\n\r\n                    <p> (max = {props.maxNumber}) </p>\r\n                    {tepmNumber > props.maxNumber &&\r\n                        <div className={css.errorSign} >\r\n                            <div className={css.errorSignPic}> \r\n                            {/* <img src={sign} alt=\"\" /> */}\r\n                                <ExclamationCircleOutlined style={{ color:\"#ff0000c0\", marginRight:'5px', fontWeight:'bold' }} />\r\n                            </div>\r\n                            Error: you have exceeded max number!!!\r\n\r\n                        </div>\r\n\r\n\r\n                    }\r\n\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n\r\n    )\r\n}","import React, { FC, useState } from \"react\";\r\nimport cn from 'classnames'\r\nimport css from './Paginator.module.css'\r\n\r\nconst PaginatorButton = (disabledArrow: boolean, setPortionNumber: (nextPortionNumber: number) => void, nextPortionNumber: number, name: string, text: string) => (\r\n    <div >\r\n        <button\r\n            className={cn(css.arrow, { [css.disabled]: disabledArrow })}\r\n            disabled={disabledArrow}\r\n            onClick={() => { setPortionNumber(nextPortionNumber) }}\r\n            name={name}\r\n        >{text}</button>\r\n    </div>\r\n)\r\n\r\ntype PaginatorPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged?: (pages: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nconst Paginator: FC<PaginatorPropsType> = ({ totalItemsCount, pageSize, currentPage, onPageChanged = x => x, portionSize = 10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(Math.ceil(currentPage / portionSize));\r\n    let leftProtionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightProtionPageNumber = (portionNumber) * portionSize\r\n\r\n    //  useEffect(() => setPortionNumber(Math.ceil(currentPage/portionSize)), [currentPage]);\r\n\r\n\r\n\r\n    return <div className={css.paginator}>\r\n        {PaginatorButton((portionNumber < 2 && true), setPortionNumber, 1, \"start\", \"First\")}\r\n        {PaginatorButton((portionNumber < 2 && true), setPortionNumber, portionNumber - 1, \"before\", \"<<\")}\r\n\r\n        {pages\r\n            .filter(p => p >= leftProtionPageNumber && p <= rightProtionPageNumber)\r\n            .map(p => {\r\n                return <span key={p}\r\n                    // className={currentPage === p ? css.sectedPage : \"\"}\r\n                    className={cn(css.pageNumber, { [css.sectedPage]: currentPage === p })}\r\n                    onClick={(e) => {\r\n                        setPortionNumber(portionNumber)\r\n                        onPageChanged(p);\r\n\r\n                    }}>{p}  </span>\r\n            })\r\n        }\r\n        {PaginatorButton(((portionNumber + 1) > portionCount && true), setPortionNumber, portionNumber + 1, \"next\", \">>\")}\r\n        {PaginatorButton(((portionNumber + 1) > portionCount && true), setPortionNumber, portionCount, \"end\", \"Last\")}\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator\r\n\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { AppStateType } from \"../redux/redux-store\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\ntype MapPropsType = { isAuth: boolean }\r\n\r\n\r\nexport function withAuthRedirect<Props extends MapPropsType>(Component: React.ComponentType<Props>) {\r\n\r\n    const RedirectComponent: React.FC<MapPropsType> = (props) => {\r\n        let { isAuth, ...restProps } = props\r\n        if (!isAuth) return <Navigate to='/login' />\r\n        return <Component {...restProps as Props} />\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","export type FieldValidatorType = (value: string) => string | undefined\r\n\r\nexport const required: FieldValidatorType = (value) => {\r\n\r\n    if (value) return undefined;\r\n    return 'Required';\r\n\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\r\n\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\nexport const minLengthCreator = (minLength: number): FieldValidatorType => (value) => {\r\n\r\n    if (value && value.length < minLength) return `Min length is ${minLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"paginator\":\"Paginator_paginator__-E8PC\",\"pageNumber\":\"Paginator_pageNumber__UjPUo\",\"sectedPage\":\"Paginator_sectedPage__29ZKP\",\"arrow\":\"Paginator_arrow__3Opv7\",\"disabled\":\"Paginator_disabled__dK5yS\",\"settingPageSize\":\"Paginator_settingPageSize__v5SVh\",\"errorSign\":\"Paginator_errorSign__Cp1LA\"};"],"names":["padTo2Digits","num","toString","padStart","getMonthName","monthNumber","date","Date","setMonth","toLocaleString","month","formatDate","getDate","getMonth","getFullYear","join","getHours","getMinutes","getSeconds","props","avatarPhoto","noPhoto","photos","small","formatedDate","lastUserActivityDate","_jsxs","children","_jsx","NavLink","onClick","onUserSelected","userId","id","name","userName","photo","className","_ref","isActive","css","to","src","alt","hasNewMessages","_Fragment","newMessagesCount","maxLength300","maxLengthCreator","minLength2","minLengthCreator","reduxForm","form","handleSubmit","error","onSubmit","createField","Textarea","required","getDialogs","state","dialogsApiPage","dialogData","getMessages","messageData","getDeletedMessages","deletedMessageData","getIsFetching","isFetching","ReloadOutlined","ref","React","AntdIcon","_objectSpread","icon","ReloadOutlinedSvg","displayName","CloseCircleOutlined","CloseCircleOutlinedSvg","messageSearchFormValidate","values","MessageSearchForm","onDateChanged","Formik","enableReinitialize","initialValues","validate","_ref2","setSubmitting","String","_ref3","isSubmitting","Form","Field","type","disabled","primaryColor","secondaryColor","CheckCircleTwoTone","CheckCircleTwoToneSvg","DeleteTwoTone","DeleteTwoToneSvg","DislikeTwoTone","DislikeTwoToneSvg","InteractionTwoTone","InteractionTwoToneSvg","contactPhoto","deleteMessage","spamMessage","restoreMessages","requestMessages","componentType","message","_objectWithoutProperties","_excluded","myId","useSelector","auth","myPhoto","userPhoto","useDispatch","addedAt","ownerPhoto","senderId","status","senderName","body","viewed","twoToneColor","console","log","style","fontSize","MessagesElement","messages","messageProps","elements","map","m","MessageItem","translatedBody","recipientId","deletedByRecipient","deletedBySender","isSpam","recipientName","addMessage","dialogs","deletedMessages","_useState","useState","_useState2","_slicedToArray","selectedUser","setSelectedUser","_useState3","_useState4","isRestoredMessage","setIsRestoredMessage","dispatch","_useState5","_useState6","totalCount","setTotalCount","_useState7","_useState8","pageSize","setPageSize","_useState9","_useState10","currentPage","setCurrentPage","_useState11","_useState12","pagesInput","setPageInput","showMessages","requestDialogs","useEffect","dialogElements","d","DialogItem","lastDialogActivityDate","marginTop","marginLeft","startChatting","fontWeight","height","margin","marginBottom","requestMessagesAfterDate","SettingOutlined","display","justifyContent","PageNumberSetting","value","settings","maxNumber","Preloader","Paginator","totalItemsCount","onPageChanged","pageNumber","AddMessageForm","newMessageText","compose","connect","withAuthRedirect","Dialogs","FormControl","_ref$meta","meta","touched","label","hasError","sign","input","restProps","Input","_excluded2","component","placeholder","autocomplete","text","arguments","length","undefined","rows","autoComplete","SyncOutlined","SyncOutlinedSvg","ExclamationCircleOutlined","ExclamationCircleOutlinedSvg","tepmNumber","setTempNumber","onChange","e","currentTarget","spin","color","marginRight","PaginatorButton","disabledArrow","setPortionNumber","nextPortionNumber","cn","_defineProperty","_ref$onPageChanged","x","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","leftProtionPageNumber","rightProtionPageNumber","filter","p","mapStateToPropsForRedirect","isAuth","Component","Navigate","maxLength","concat","minLength"],"sourceRoot":""}