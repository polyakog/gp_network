{"version":3,"file":"static/js/294.9ab712d8.chunk.js","mappings":"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","sources":["webpack://gp-project/./src/components/Login/Login.module.css?3530","components/Login/Login.jsx","webpack://gp-project/./src/components/common/FormsControls/FormsControls.module.css?eb50","components/common/FormsControls/FormsControls.js","utils/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginForm\":\"Login_loginForm__HOjBq\",\"formHead\":\"Login_formHead__N73+j\",\"formError\":\"Login_formError__PYwJg\",\"errorSignPic\":\"Login_errorSignPic__Y2PpM\",\"errorSpan\":\"Login_errorSpan__UFOAJ\"};","import React from \"react\";\r\nimport css from '../Login/Login.module.css'\r\nimport { reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from \"../../utils/validators\";\r\nimport { createField, Input } from \"../common/FormsControls/FormsControls\";\r\nimport { connect } from 'react-redux';\r\n// import { connect } from 'react-redux/es/exports';\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport sign from \"./../../assets/images/sign4.jpg\"\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Navigate to={'/profile'} />\r\n    }\r\n\r\n    return <div >\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    const maxLength50 = maxLengthCreator(50)\r\n    const maxLength20 = maxLengthCreator(20)\r\n\r\n    return <form className={css.loginForm} onSubmit={handleSubmit}>\r\n        <h2 className={css.formHead}>Login</h2>\r\n       \r\n        {createField(error, 'email', 'LOGIN', Input, 'text', 'your registered email', 'username', [required, maxLength50], '')} \r\n        <p></p>\r\n        {createField(error, 'password', 'PASSWORD', Input, 'password', 'your password', 'current-password', [required, maxLength20], '')} \r\n        <p></p>\r\n        {createField(null, 'rememberMe', '', 'input', 'checkbox', '', '', [], 'remember me')} \r\n        \r\n        {error &&\r\n            <div className={css.formError}>\r\n                <img className={css.errorSignPic} src={sign} alt=\"\" />\r\n                <span className={css.errorSpan}> {error} </span>\r\n            </div>\r\n        }\r\n\r\n        <div>\r\n            <button className={css.loginButton} >Login</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"FormsControls_label__+ZF2O\",\"Textarea\":\"FormsControls_Textarea__x4-ya\",\"errorTextarea\":\"FormsControls_errorTextarea__-hWr-\",\"warningWrap\":\"FormsControls_warningWrap__nGBQM\",\"signPic\":\"FormsControls_signPic__OUvnL\",\"errorSpan\":\"FormsControls_errorSpan__sv1BN\",\"errorField\":\"FormsControls_errorField__lwwdD\"};","import React from \"react\";\r\nimport css from \"./FormsControls.module.css\";\r\nimport sign from \"../../../assets/images/sign4.jpg\"\r\nimport { Field } from \"redux-form\";\r\n\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, label, children, ...props }) => {\r\n    // debugger\r\n    const hasError = touched && error;\r\n    return (\r\n        <div >\r\n            <label className={css.label}>{label}</label>\r\n\r\n            <div className={(hasError ? css.errorTextarea : \" \")}>\r\n                {children}\r\n            </div>\r\n\r\n            {touched && error && \r\n            <div className={css.warningWrap}>\r\n                <img className={css.signPic} src={sign} alt=\"\" />\r\n                <span className={css.errorSpan}>{error}</span>\r\n            </div>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, ...restProps } = props;\r\n    return <FormControl {...props}><textarea className={css.Textarea} {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n\r\n    const { input, ...restProps } = props;\r\n    return <FormControl {...props}><input className={css.Textarea} {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n\r\n\r\nexport const createField = (error, name, label, component, type, placeholder, autocomplete, validate, text) => (\r\n        <div className={error ? css.errorField : ''}>\r\n            <Field\r\n                name = {name}\r\n                label={label}\r\n                component={component}\r\n                type={type}\r\n                placeholder={placeholder}\r\n                autocomplete={autocomplete}\r\n                validate={validate}\r\n            /> {text}\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n","import React from \"react\"\r\n\r\nexport const required = value => {\r\n    \r\n    if (value) return undefined;\r\n     return 'Required' ;\r\n    \r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    \r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => value => {\r\n    \r\n    if (value && value.length < minLength) return `Min length is ${minLength} symbols`;\r\n    return undefined;\r\n}"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","maxLength50","maxLengthCreator","maxLength20","className","css","onSubmit","createField","Input","required","src","sign","alt","connect","state","isAuth","auth","login","props","to","formData","email","password","rememberMe","FormControl","input","meta","touched","label","children","hasError","Textarea","restProps","name","component","type","placeholder","autocomplete","validate","text","Field","value","maxLength","length","minLengthCreator","minLength"],"sourceRoot":""}